version: "3.3"
services:
  csp-server:
    image: csp-server
    restart: always
    environment:
      MONGO_USER: docker-root
      MONGO_PASS: thisisasecurepasswordtm
      MONGO_HOST: mongo
      PORT: "7070"
      BASENAME: "problems.getpwning.com:7070"
    ports:
      - "7070:7070"
  csp-bot:
    image: csp-bot
    restart: always
    cap_add:
      - SYS_ADMIN
    environment:
      MONGO_USER: docker-root
      MONGO_PASS: thisisasecurepasswordtm
      MONGO_HOST: mongo
      PORT: "7070"
      BASENAME: "problems.getpwning.com:7070"
  trackr-server:
    image: trackr-server
    restart: always
    environment:
      MONGO_USER: docker-root
      MONGO_PASS: thisisasecurepasswordtm
      MONGO_HOST: mongo
      PORT: "7654"
      BASENAME: "problems.getpwning.com:7654"
    ports:
      - "7654:7654"
  trackr-bot:
    image: trackr-bot
    restart: always
    cap_add:
      - SYS_ADMIN
    environment:
      MONGO_USER: docker-root
      MONGO_PASS: thisisasecurepasswordtm
      MONGO_HOST: mongo
      PORT: "7654"
      BASENAME: "problems.getpwning.com:7654"
  mongo:
    image: mongo:4
    environment:
      MONGO_INITDB_ROOT_USERNAME: docker-root
      MONGO_INITDB_ROOT_PASSWORD: thisisasecurepasswordtm
      MONGO_INITDB_DATABASE: postable
  vfs:
    image: vfs
    restart: always
    ports:
      - "9630:9630"
  canihaveflag:
    image: canihaveflag
    restart: always
    ports:
      - "5454:5454"
  bagelshop:
    image: bagelshop
    ports:
      - "7007:80"
    volumes:
      - ./bagelshop/web/www:/var/www/html/
  mysqldb:
    image: mysql:5.7
    environment:
      MYSQL_DATABASE: bageldb
      MYSQL_USER: user
      MYSQL_PASSWORD: thisisasecurepasswordtm
      MYSQL_ROOT_PASSWORD: thisisasecurepasswordtm
    volumes:
      - ./bagelshop/db:/docker-entrypoint-initdb.d
  wordlock:
    image: wordlock
    ports:
      - "1337:80"
    volumes:
      - ./word-lock/web/www:/var/www/html/
  mysqlworddb:
    image: mysql:5.7
    environment:
      MYSQL_DATABASE: flagdb
      MYSQL_USER: user
      MYSQL_PASSWORD: thisisasecurepasswordtm
      MYSQL_ROOT_PASSWORD: thisisasecurepasswordtm
    expose: 
      - "3307"
    ports:
      - "3307:3306"
    volumes:
      - ./word-lock/db:/docker-entrypoint-initdb.d
  js-safe:
    image: js-safe
    ports:
      - "2266:80"
  postgres:
    image: postgres
    volumes:
      - "./postgres/:/docker-entrypoint-initdb.d/"
    environment:
      - "POSTGRES_USER=admin"
      - "POSTGRES_PASSWORD=oxgFHNhNDckIkEDw"
  intro:
    image: intro
    ports:
      - "8000:8000"